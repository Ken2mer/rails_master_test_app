class Message < ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Message, ActiveRecord_Relation]

  attr_accessor id(): Integer
  def id_changed?: () -> bool
  def id_change: () -> [ Integer?, Integer? ]
  def id_will_change!: () -> void
  def id_was: () -> Integer?
  def id_previously_changed?: () -> bool
  def id_previous_change: () -> Array[Integer?]?
  def id_previously_was: () -> Integer?
  def restore_id!: () -> void
  def clear_id_change: () -> void

  attr_accessor title(): String?
  def title_changed?: () -> bool
  def title_change: () -> [ String?, String? ]
  def title_will_change!: () -> void
  def title_was: () -> String?
  def title_previously_changed?: () -> bool
  def title_previous_change: () -> Array[String?]?
  def title_previously_was: () -> String?
  def restore_title!: () -> void
  def clear_title_change: () -> void

  attr_accessor created_at(): ActiveSupport::TimeWithZone
  def created_at_changed?: () -> bool
  def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]
  def created_at_will_change!: () -> void
  def created_at_was: () -> ActiveSupport::TimeWithZone?
  def created_at_previously_changed?: () -> bool
  def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?
  def created_at_previously_was: () -> ActiveSupport::TimeWithZone?
  def restore_created_at!: () -> void
  def clear_created_at_change: () -> void

  attr_accessor updated_at(): ActiveSupport::TimeWithZone
  def updated_at_changed?: () -> bool
  def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]
  def updated_at_will_change!: () -> void
  def updated_at_was: () -> ActiveSupport::TimeWithZone?
  def updated_at_previously_changed?: () -> bool
  def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?
  def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?
  def restore_updated_at!: () -> void
  def clear_updated_at_change: () -> void

  def images_attachments: () -> ActiveStorage::Attachment::ActiveRecord_Associations_CollectionProxy
  def images_attachments=: (ActiveStorage::Attachment::ActiveRecord_Associations_CollectionProxy | Array[ActiveStorage::Attachment]) -> (ActiveStorage::Attachment::ActiveRecord_Associations_CollectionProxy | Array[ActiveStorage::Attachment])
  def images_attachment_ids: () -> Array[Integer]
  def images_attachment_ids=: (Array[Integer]) -> Array[Integer]
  def images_blobs: () -> ActiveStorage::Blob::ActiveRecord_Associations_CollectionProxy
  def images_blobs=: (ActiveStorage::Blob::ActiveRecord_Associations_CollectionProxy | Array[ActiveStorage::Blob]) -> (ActiveStorage::Blob::ActiveRecord_Associations_CollectionProxy | Array[ActiveStorage::Blob])
  def images_blob_ids: () -> Array[Integer]
  def images_blob_ids=: (Array[Integer]) -> Array[Integer]

  class ActiveRecord_Relation < ActiveRecord::Relation
    include _ActiveRecord_Relation[Message]
    include Enumerable[Message]
  end

  class ActiveRecord_Associations_CollectionProxy < ActiveRecord::Associations::CollectionProxy
  end
end
